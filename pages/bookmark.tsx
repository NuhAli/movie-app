import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useSession } from "next-auth/react";
import NavBar from "../components/nav-bar/nav-bar";
import { GetServerSideProps } from "next";
import { client } from "../utils/image-loader";
import IMediaItem from "../components/cards/media-item";
import Grid from "../components/grid/grid";
import { GridArea } from "../styles/common";
import { useEffect, useState } from "react";

interface MovieProps {
  movies: Array<IMediaItem>;
  shows: Array<IMediaItem>;
}

function Bookmarked({ movies, shows }: MovieProps) {

  const [data,setData] = useState()

  useEffect(() => {
    const fetchData = async () => {
      const query = '*[_type == "media" && isBookmarked == $status]'
      const params = {status: true}
      
      const subscription = client.listen(query, params).subscribe((update) => {
        console.log(update)
      })
    }
    fetchData()
  },[])

  return (
    <>
      <Head>
        <title>TV Series</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <NavBar />
        <GridArea>
          {movies && <Grid items={movies} heading={"Bookmarked Movies"} />}
          {shows && <Grid items={shows} heading={"Bookmarked TV Series"} />}
        </GridArea>
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {

  const query = '*[_type == "media" && isBookmarked == $status]'
  const param = {status: true}

  const media = await client.fetch(query,param);

  const shows = media.filter(
    (item: IMediaItem) => item.category === "TV Series"
  );
  const movies = media.filter((item: IMediaItem) => item.category === "Movie");

  if (!media) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      movies,
      shows,
    },
  };
};

export default Bookmarked;
